[
    {
        "human": "帮我总结一下之前的知识，然后帮我结合知识出代码题让我练习",
        "ai": "**知识总结与代码练习题**  \n\n---\n\n### **一、知识回顾**  \n1. **变量与数据类型**  \n   - 动态类型：无需声明类型，赋值自动推断（如 `x = 5` 是 `int`，`y = 3.14` 是 `float`）。  \n   - 核心类型：`int`（任意精度）、`float`（IEEE 754）、`str`（不可变）、`bool`（`True`/`False`）。  \n   - 类型检查：`type()` 和 `isinstance()`（后者支持继承关系判断）。  \n   - 类型转换：`int()`、`float()`、`str()` 等（注意 `input()` 返回的是 `str`）。  \n\n2. **运算符与表达式**  \n   - **算术运算符**：`+`、`-`、`*`、`/`、`%`、`**`、`//`（整除）。  \n   - **比较运算符**：`==`、`!=`、`>`、`<`、`>=`、`<=`（支持链式比较）。  \n   - **逻辑运算符**：`and`、`or`、`not`（短路特性）。  \n   - **位运算符**：`&`、`|`、`^`、`~`、`<<`、`>>`（操作二进制位）。  \n   - **成员运算符**：`in`/`not in`（高效检查集合/字典）。  \n   - **身份运算符**：`is`/`is not`（比较内存地址，如 `x is None`）。  \n\n---\n\n### **二、代码练习题**  \n\n#### **基础题**  \n1. **变量命名与类型转换**  \n   - 编写代码：用户输入一个字符串，判断是否为纯数字（如 `isdigit()`），若是则转换为 `int`，否则原样输出。  \n   - 示例输入/输出：  \n     ```python  \n     Input: \"123\" → Output: 123 (int)  \n     Input: \"abc\" → Output: \"abc\" (str)  \n     ```  \n\n2. **运算符优先级**  \n   - 计算表达式 `5 + 3 * 2 ** 2 > 10 and 5 % 2 == 1` 的结果，并解释每一步的运算顺序。  \n\n---\n\n#### **进阶题**  \n3. **位运算实现二进制转换**  \n   - 编写函数 `int_to_binary(n)`，将整数 `n` 转换为二进制字符串（不使用 `bin()`）。  \n   - 示例：  \n     ```python  \n     int_to_binary(5) → \"101\"  \n     int_to_binary(10) → \"1010\"  \n     ```  \n\n4. **闰年判断逻辑表达式**  \n   - 编写函数 `is_leap_year(year)`，判断年份是否为闰年（规则：能被4整除但不能被100整除，或能被400整除）。  \n   - 测试用例：  \n     ```python  \n     is_leap_year(2000) → True  \n     is_leap_year(1900) → False  \n     is_leap_year(2024) → True  \n     ```  \n\n---\n\n#### **挑战题**  \n5. **BMI计算器（类型安全）**  \n   - 编写交互式程序，接收用户输入的身高（米）和体重（kg），计算 BMI（`体重 / 身高²`），并输出结果和分类（如：BMI < 18.5 → 体重过轻）。  \n   - 要求：使用 `float()` 转换输入，处理非数字输入异常。  \n\n6. **元音字母统计器**  \n   - 编写函数 `count_vowels(s)`，统计字符串 `s` 中元音字母（a, e, i, o, u，不区分大小写）的数量。  \n   - 示例：  \n     ```python  \n     count_vowels(\"Hello World\") → 3  \n     count_vowels(\"Python is fun\") → 4  \n     ```  \n\n---\n\n### **三、验证代码**  \n运行以下代码观察输出，并解释每一步的逻辑：  \n```python  \na = 10  \nb = 3  \nprint(a & b, a | b, a ^ b, ~a)  # 输出？  \nprint(0b1010 >> 1)  # 输出？  \nprint('py' in 'Python')  # 输出？  \n```  \n\n**提示**：  \n- 位运算需将 `a` 和 `b` 转换为二进制分析。  \n- `in` 运算符对大小写敏感。  \n\n完成后，可尝试《Python编程：从入门到实践》第2章习题，重点练习运算符优先级和位操作！"
    }
]