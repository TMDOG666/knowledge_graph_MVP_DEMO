[
    {
        "human": "概述一下之前的知识点，并帮我出几道编程题，让我巩固一下",
        "ai": "**知识点回顾**  \n1. **变量与数据类型**  \n   - 动态类型：无需声明类型，赋值自动推断（如 `x = 5` 为 `int`，`y = \"hello\"` 为 `str`）  \n   - 核心类型：`int`（任意精度）、`float`（IEEE 754）、`str`（不可变）、`bool`（`True`/`False`）  \n   - 类型转换：`int()`、`float()`、`str()` 等  \n   - 类型检查：`type()` 与 `isinstance()` 的区别（后者支持继承关系判断）  \n\n2. **运算符与表达式**  \n   - **算术运算符**：`+`/`-`/`*`/`/`/`%`/`**`/`//`（如 `5 // 2` 输出 `2`）  \n   - **位运算符**：`&`/`|`/`^`/`~`/`<<`/`>>`（如 `5 & 3` → `1`，`0b1010 >> 1` → `0b101`）  \n   - **逻辑运算符**：`and`/`or`/`not`（短路特性：`False and x` 不执行 `x`）  \n   - **成员运算符**：`in`/`not in`（在集合/字典中时间复杂度为 O(1)）  \n   - **身份运算符**：`is`/`is not`（比较内存地址，如 `x is None` 而非 `x == None`）  \n\n---\n\n**编程题巩固练习**  \n\n### **题目1：类型安全加法函数**  \n要求：  \n- 编写一个函数 `safe_add(a, b)`，仅当 `a` 和 `b` 类型相同时返回 `a + b`，否则抛出 `TypeError`。  \n- 测试用例：  \n  ```python  \n  safe_add(3, 5)       # 应返回 8  \n  safe_add(\"3\", \"5\")   # 应返回 \"35\"  \n  safe_add(3, \"5\")     # 应抛出 TypeError  \n  ```  \n\n### **题目2：位运算实现二进制转换**  \n要求：  \n- 编写函数 `binary_representation(n)`，输入整数 `n`，输出其二进制字符串（不使用 `bin()`）。  \n- 示例：`binary_representation(10)` → `\"1010\"`  \n\n### **题目3：BMI 计算器**  \n要求：  \n- 用 `input()` 获取用户身高（米）和体重（千克），计算 BMI 并输出结果。  \n- 公式：`BMI = 体重 / 身高²`  \n- 结果分类：  \n  - `< 18.5`: \"Underweight\"  \n  - `18.5-24.9`: \"Normal\"  \n  - `25-29.9`: \"Overweight\"  \n  - `≥ 30`: \"Obese\"  \n\n### **题目4：闰年判断**  \n要求：  \n- 编写函数 `is_leap_year(year)`，返回年份是否为闰年。  \n- 条件：  \n  - 能被 4 整除但不能被 100 整除，或能被 400 整除。  \n- 示例：  \n  ```python  \n  is_leap_year(2000)  # True  \n  is_leap_year(1900)  # False  \n  is_leap_year(2024)  # True  \n  ```  \n\n### **题目5：元音字母统计器**  \n要求：  \n- 编写函数 `count_vowels(s)`，统计字符串 `s` 中元音字母（a, e, i, o, u，不区分大小写）的数量。  \n- 使用 `in` 运算符实现。  \n- 示例：`count_vowels(\"Hello World\")` → `3`  \n\n### **题目6：None 与身份运算符**  \n要求：  \n- 编写函数 `check_none(value)`，判断输入是否为 `None`，并返回对应信息。  \n- 错误示例修正：  \n  ```python  \n  # 错误写法  \n  if value == None: ...  \n  # 正确写法  \n  if value is None: ...  \n  ```  \n\n---\n\n**提示与验证方式**  \n1. 题目1：使用 `type(a) == type(b)` 或 `isinstance(a, (int, float))` 进行类型检查。  \n2. 题目2：通过位移和取余操作逐位提取二进制位。  \n3. 题目3：注意 `input()` 返回的是 `str`，需用 `float()` 转换。  \n4. 题目4：逻辑表达式需正确嵌套 `and`/`or`。  \n5. 题目5：将字符串转为小写后统一判断。  \n6. 题目6：运行 `print(None is None)` 和 `print(None == None)` 观察输出差异。  \n\n完成后可运行以下代码验证：  \n```python  \n# 验证题目2  \nprint(binary_representation(0b1101))  # 输出 \"1101\"  \n# 验证题目4  \nprint(is_leap_year(2020))  # True  \n# 验证题目5  \nprint(count_vowels(\"AEIOUaeiou\"))  # 输出 10  \n```"
    }
]